resource "aws_iam_role" "codedeploy" {
  name = "codedeploy-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "",
      "Effect": "Allow",
      "Principal": {
        "Service": "codedeploy.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "AWSCodeDeployRole" {
  policy_arn = "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
  role       = "${aws_iam_role.codedeploy.name}"
}

resource "aws_codedeploy_app" "collarks-deploy-2or3" {
  compute_platform = "ECS"
  name             = "collarks-deploy-2or3"
}

resource "aws_codedeploy_deployment_config" "collarks-deploy-config-2or3" {
  deployment_config_name = "collarks-deploy-config-2or3"
  compute_platform       = "ECS"

  traffic_routing_config {
    type = "TimeBasedCanary"

    time_based_canary {
      interval   = 10
      percentage = 10
    }
  }
}

resource "aws_codedeploy_deployment_group" "collarks-deploy-group-2or3" {
  app_name               = "${aws_codedeploy_app.collarks-deploy-2or3.name}"
  deployment_group_name  = "collarks-group"
  service_role_arn       = "${aws_iam_role.codedeploy.arn}"
  deployment_config_name = "CodeDeployDefault.ECSAllAtOnce"

  auto_rollback_configuration {
    enabled = true
    events  = ["DEPLOYMENT_FAILURE"]
  }
}

